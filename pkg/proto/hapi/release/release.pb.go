// Code generated by protoc-gen-go.
// source: hapi/release/release.proto
// DO NOT EDIT!

package release

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import hapi_chart "github.com/deis/tiller/pkg/proto/hapi/chart"
import hapi_chart3 "github.com/deis/tiller/pkg/proto/hapi/chart"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

//
// Release:
//
// 		TODO
//
type Release struct {
	// TODO
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	// TODO
	Info *Info `protobuf:"bytes,2,opt,name=info" json:"info,omitempty"`
	// TODO
	Chart *hapi_chart3.Chart `protobuf:"bytes,3,opt,name=chart" json:"chart,omitempty"`
	// TODO
	Config *hapi_chart.Config `protobuf:"bytes,4,opt,name=config" json:"config,omitempty"`
}

func (m *Release) Reset()                    { *m = Release{} }
func (m *Release) String() string            { return proto.CompactTextString(m) }
func (*Release) ProtoMessage()               {}
func (*Release) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

func (m *Release) GetInfo() *Info {
	if m != nil {
		return m.Info
	}
	return nil
}

func (m *Release) GetChart() *hapi_chart3.Chart {
	if m != nil {
		return m.Chart
	}
	return nil
}

func (m *Release) GetConfig() *hapi_chart.Config {
	if m != nil {
		return m.Config
	}
	return nil
}

func init() {
	proto.RegisterType((*Release)(nil), "hapi.release.Release")
}

var fileDescriptor1 = []byte{
	// 182 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xe2, 0x92, 0xca, 0x48, 0x2c, 0xc8,
	0xd4, 0x2f, 0x4a, 0xcd, 0x49, 0x4d, 0x2c, 0x4e, 0x85, 0xd1, 0x7a, 0x05, 0x45, 0xf9, 0x25, 0xf9,
	0x42, 0x3c, 0x20, 0x39, 0x3d, 0xa8, 0x98, 0x94, 0x38, 0x8a, 0xca, 0xcc, 0xbc, 0xb4, 0x7c, 0x88,
	0x32, 0xa8, 0x44, 0x72, 0x46, 0x62, 0x51, 0x89, 0x7e, 0x72, 0x7e, 0x5e, 0x5a, 0x66, 0x3a, 0x54,
	0x42, 0x0c, 0x59, 0x02, 0x44, 0x42, 0xc4, 0x95, 0x66, 0x31, 0x72, 0xb1, 0x07, 0x41, 0xcc, 0x11,
	0x12, 0xe2, 0x62, 0xc9, 0x4b, 0xcc, 0x4d, 0x95, 0x60, 0x54, 0x60, 0xd4, 0xe0, 0x0c, 0x02, 0xb3,
	0x85, 0xd4, 0xb8, 0x58, 0x40, 0xc6, 0x4b, 0x30, 0x01, 0xc5, 0xb8, 0x8d, 0x84, 0xf4, 0x90, 0x9d,
	0xa1, 0xe7, 0x09, 0x94, 0x09, 0x02, 0xcb, 0x0b, 0xa9, 0x73, 0xb1, 0x82, 0x8d, 0x95, 0x60, 0x06,
	0x2b, 0x14, 0x84, 0x28, 0x84, 0xd8, 0xe4, 0x0c, 0x22, 0x83, 0x20, 0xf2, 0x42, 0x5a, 0x5c, 0x6c,
	0x10, 0x87, 0x49, 0xb0, 0x20, 0x1b, 0x09, 0x55, 0x09, 0x96, 0x09, 0x82, 0xaa, 0x70, 0xe2, 0x8c,
	0x62, 0x87, 0x5a, 0x95, 0xc4, 0x06, 0x76, 0xae, 0x31, 0x20, 0x00, 0x00, 0xff, 0xff, 0xb4, 0xa3,
	0x61, 0x9d, 0x24, 0x01, 0x00, 0x00,
}
