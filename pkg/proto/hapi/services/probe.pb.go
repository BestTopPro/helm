// Code generated by protoc-gen-go.
// source: hapi/services/probe.proto
// DO NOT EDIT!

/*
Package services is a generated protocol buffer package.

It is generated from these files:
	hapi/services/probe.proto
	hapi/services/tiller.proto

It has these top-level messages:
	ReadyRequest
	ReadyResponse
	ListReleasesRequest
	ListReleasesResponse
	GetReleaseStatusRequest
	GetReleaseStatusResponse
	GetReleaseContentRequest
	GetReleaseContentResponse
	UpdateReleaseRequest
	UpdateReleaseResponse
	InstallReleaseRequest
	InstallReleaseResponse
	UninstallReleaseRequest
	UninstallReleaseResponse
*/
package services

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
const _ = proto.ProtoPackageIsVersion1

type ReadyRequest struct {
}

func (m *ReadyRequest) Reset()                    { *m = ReadyRequest{} }
func (m *ReadyRequest) String() string            { return proto.CompactTextString(m) }
func (*ReadyRequest) ProtoMessage()               {}
func (*ReadyRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type ReadyResponse struct {
}

func (m *ReadyResponse) Reset()                    { *m = ReadyResponse{} }
func (m *ReadyResponse) String() string            { return proto.CompactTextString(m) }
func (*ReadyResponse) ProtoMessage()               {}
func (*ReadyResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func init() {
	proto.RegisterType((*ReadyRequest)(nil), "hapi.services.probe.ReadyRequest")
	proto.RegisterType((*ReadyResponse)(nil), "hapi.services.probe.ReadyResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion1

// Client API for ProbeService service

type ProbeServiceClient interface {
	Ready(ctx context.Context, in *ReadyRequest, opts ...grpc.CallOption) (*ReadyResponse, error)
}

type probeServiceClient struct {
	cc *grpc.ClientConn
}

func NewProbeServiceClient(cc *grpc.ClientConn) ProbeServiceClient {
	return &probeServiceClient{cc}
}

func (c *probeServiceClient) Ready(ctx context.Context, in *ReadyRequest, opts ...grpc.CallOption) (*ReadyResponse, error) {
	out := new(ReadyResponse)
	err := grpc.Invoke(ctx, "/hapi.services.probe.ProbeService/Ready", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for ProbeService service

type ProbeServiceServer interface {
	Ready(context.Context, *ReadyRequest) (*ReadyResponse, error)
}

func RegisterProbeServiceServer(s *grpc.Server, srv ProbeServiceServer) {
	s.RegisterService(&_ProbeService_serviceDesc, srv)
}

func _ProbeService_Ready_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error) (interface{}, error) {
	in := new(ReadyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	out, err := srv.(ProbeServiceServer).Ready(ctx, in)
	if err != nil {
		return nil, err
	}
	return out, nil
}

var _ProbeService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "hapi.services.probe.ProbeService",
	HandlerType: (*ProbeServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Ready",
			Handler:    _ProbeService_Ready_Handler,
		},
	},
	Streams: []grpc.StreamDesc{},
}

var fileDescriptor0 = []byte{
	// 131 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xe2, 0x92, 0xcc, 0x48, 0x2c, 0xc8,
	0xd4, 0x2f, 0x4e, 0x2d, 0x2a, 0xcb, 0x4c, 0x4e, 0x2d, 0xd6, 0x2f, 0x28, 0xca, 0x4f, 0x4a, 0xd5,
	0x03, 0x92, 0x25, 0xf9, 0x42, 0xc2, 0x20, 0x29, 0x3d, 0x98, 0x94, 0x1e, 0x58, 0x4a, 0x89, 0x8f,
	0x8b, 0x27, 0x28, 0x35, 0x31, 0xa5, 0x32, 0x28, 0xb5, 0xb0, 0x34, 0xb5, 0xb8, 0x44, 0x89, 0x9f,
	0x8b, 0x17, 0xca, 0x2f, 0x2e, 0xc8, 0xcf, 0x2b, 0x4e, 0x35, 0x4a, 0xe0, 0xe2, 0x09, 0x00, 0xa9,
	0x0c, 0x86, 0xe8, 0x13, 0x0a, 0xe0, 0x62, 0x05, 0x2b, 0x10, 0x52, 0xd4, 0xc3, 0x62, 0x9e, 0x1e,
	0xb2, 0x61, 0x52, 0x4a, 0xf8, 0x94, 0x40, 0xcc, 0x57, 0x62, 0x70, 0xe2, 0x8a, 0xe2, 0x80, 0xa9,
	0x48, 0x62, 0x03, 0x3b, 0xd5, 0x18, 0x10, 0x00, 0x00, 0xff, 0xff, 0x65, 0x03, 0x07, 0x01, 0xc7,
	0x00, 0x00, 0x00,
}
